# Copyright (C) 2018 taylor.fish <contact@taylor.fish>
#
# This file is part of Midislide.
#
# Midislide is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Midislide is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Midislide.  If not, see <http://www.gnu.org/licenses/>.

# This file was automatically generated by generate_plugin_data.py.

@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix lv2: <http://lv2plug.in/ns/lv2core#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix units: <http://lv2plug.in/ns/extensions/units#> .
@prefix pprops: <http://lv2plug.in/ns/ext/port-props#> .
@prefix atom:  <http://lv2plug.in/ns/ext/atom#> .
@prefix urid:  <http://lv2plug.in/ns/ext/urid#> .
@prefix midi:  <http://lv2plug.in/ns/ext/midi#> .
@prefix time: <http://lv2plug.in/ns/ext/time#> .

<https://taylor.fish/plugins/midislide>
    a lv2:Plugin ;
    doap:name "Midislide" ;
    doap:license <https://www.gnu.org/licenses/gpl-3.0.txt> ;
    doap:developer [
        a foaf:Person ;
        foaf:name "taylor.fish" ;
        foaf:mbox <mailto:contact@taylor.fish> ;
    ] ;
    doap:maintainer [
        a foaf:Person ;
        foaf:name "taylor.fish" ;
        foaf:mbox <mailto:contact@taylor.fish> ;
    ] ;
    lv2:optionalFeature lv2:hardRTCapable ;
    lv2:requiredFeature pprops:supportsStrictBounds ;
    lv2:requiredFeature urid:map ;
    lv2:port [
        a lv2:InputPort ,
          atom:AtomPort ;
        atom:bufferType atom:Sequence;
        atom:supports midi:MidiEvent;
        atom:supports time:Position;
        lv2:index 0 ;
        lv2:symbol "in" ;
        lv2:name "In"
    ] , [
        a lv2:OutputPort ,
          atom:AtomPort ;
        atom:bufferType atom:Sequence;
        atom:supports midi:MidiEvent;
        lv2:index 1 ;
        lv2:symbol "out" ;
        lv2:name "Out"
    ] , [
        a lv2:InputPort ,
          lv2:ControlPort ;
        lv2:index 2 ;
        lv2:symbol "beat_divisor" ;
        lv2:name "Beat divisor" ;
        lv2:portProperty pprops:hasStrictBounds ;
        lv2:default 4 ;
        lv2:minimum 0.125 ;
        lv2:maximum 128;
    ] , [
        a lv2:InputPort ,
          lv2:ControlPort ;
        lv2:index 3 ;
        lv2:symbol "bend_semitone_distance" ;
        lv2:name "Pitch bend semitone distance" ;
        lv2:portProperty pprops:hasStrictBounds ;
        lv2:default 12 ;
        lv2:minimum 0.5 ;
        lv2:maximum 64;
    ] , [
        a lv2:InputPort ,
          lv2:ControlPort ;
        lv2:index 4 ;
        lv2:symbol "forced_velocity" ;
        lv2:name "Fixed velocity" ;
        lv2:portProperty pprops:hasStrictBounds ;
        lv2:portProperty lv2:integer ;
        lv2:default 0 ;
        lv2:minimum 0 ;
        lv2:maximum 127;
    ] .
